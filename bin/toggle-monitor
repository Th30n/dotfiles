#!/usr/bin/env python3

from shlex import join, quote
import subprocess as sp
import sys
from traceback import format_exception_only

class Monitor:
    def __init__(self, name, is_connected):
        self.name = name
        self.is_connected = is_connected

    @staticmethod
    def parse(line):
        words = line.split()
        name = words[0]
        is_connected = True if words[1] == 'connected' else False
        return Monitor(name, is_connected)


def _notify_send(title, body, urgency='low'):
    assert urgency in ('low', 'normal', 'critical')
    _NOTIFY_FMT = "notify-send -u {urgency} -c monitor {title} {body}"
    sp.check_call(_NOTIFY_FMT.format(urgency=urgency,
                                     title=quote(title),
                                     body=quote(body)),
                  shell=True)


def get_monitors():
    return [Monitor.parse(l)
            for l in sp.check_output('xrandr', encoding='utf-8').splitlines()
            # NOTE: 'connected' is also in 'disconnected', so this is only for
            # distinguishing lines which define a possible monitor output
            if 'connected' in l]


def toggle_external_monitor():
    monitors = get_monitors()
    connected_monitors = [m for m in get_monitors() if m.is_connected]
    primary = connected_monitors[0]
    if len(connected_monitors) > 1:
        secondary = connected_monitors[1]
        xrandr_cmd = ('xrandr', '--output', primary.name, '--primary', '--auto',
                      '--output', secondary.name, '--right-of', primary.name, '--auto')
        _notify_send(secondary.name + ' -- ON ', join(xrandr_cmd))
        sp.check_call(xrandr_cmd)
        if len(connected_monitors) > 2:
            _notify_send('Not yet implemented', 'Support for more than 2 monitors',
                         urgency='normal')
    else:
        xrandr_cmd = ('xrandr', '--output', primary.name, '--primary', '--auto')
        for m in monitors:
            if m.is_connected:
                continue
            xrandr_cmd += ('--output', m.name, '--off')
        _notify_send(primary.name + ' -- ON', join(xrandr_cmd))
        sp.check_call(xrandr_cmd)


if __name__ == '__main__':
    try:
        toggle_external_monitor()
    except:
        e = sys.exception()
        _notify_send('toggle_external_monitor',
                     ''.join(format_exception_only(e)),
                     urgency='critical')
        raise
